@page "/"

<style>
    .my-align-center input {
        text-align: center;
    }

    div.sticky {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        background-color: #666;
        padding: 40px;
        font-size: 25px;
    }
</style>

<div class="ma-8">
    <div class="d-flex flex-column align-center">
        <div class="d-flex flex-column align-center" style="width: fit-content">
            <div style="width: 100%">
                <MudAutocomplete Class="ma-2 my-align-center" T="string" Label="Distanz in Meter" @bind-Value="this.InputDistance" SearchFunc="@(this.DistanceSearch)"
                                 Margin="Margin.Dense" Dense="true" Variant="Variant.Outlined" CoerceValue="true" CoerceText="true"/>
            </div>
            <div class="d-flex flex-row">
                <MudTextField Class="ma-2 my-align-center" Immediate="true" @bind-Value="this.InputTimeMinutes" Label="Minuten" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                <MudTextField Class="ma-2 my-align-center" Immediate="true" @bind-Value="this.InputTimeSeconds" Label="Sekunden" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </div>
            <div class="d-flex flex-column align-center mt-4">
                <MudText Typo="Typo.subtitle2" Color="Color.Error">@this.OutputInfoText</MudText>
                
                <div class="d-flex flex-column align-center">
                    <div class="d-flex flex-row">
                        <MudButton Class="ma-2" OnClick="@this.OnStartLapClick" Color="Color.Primary" Variant="Variant.Filled">@(this.Stopwatch is { IsRunning: true } ? "Runde" : "Start")</MudButton>
                        <MudButton Class="ma-2" OnClick="@this.OnStopClick" Color="Color.Primary" Variant="Variant.Filled" Disabled="@(!(this.Stopwatch is { IsRunning: true}))">Stop</MudButton>
                    </div>
                    @if (this.Stopwatch != null)
                    {
                        @if (this.Stopwatch.Elapsed.Hours > 0)
                        {
                            <MudText Typo="Typo.h6">@this.Stopwatch.Elapsed.ToString(@"HH\:mm\:ss\.fff")</MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.h6">@this.Stopwatch.Elapsed.ToString(@"mm\:ss\.fff")</MudText>
                        }

                        @if (this.Laps.Count > 0)
                        {
                            <MudSimpleTable Elevation="0" Hover="true" Dense="true" FixedHeader="true">
                                <tbody>
                                @foreach (var lap in this.Laps)
                                {
                                    <tr>
                                            <td style="padding: 1px 10px;"><MudText Class="mud-typography-align-right" Typo="Typo.body2">@($"{lap.Lap}:")</MudText></td>
                                            <td style="padding: 1px 10px;">
                                            @if (lap.Time.Hours > 0)
                                            {
                                                    <MudText Class="mud-typography-align-left" Typo="Typo.body2">@lap.Time.ToString(@"HH\:mm\:ss\.fff")</MudText>
                                            }
                                            else
                                            {
                                                    <MudText Class="mud-typography-align-left" Typo="Typo.body2">@lap.Time.ToString(@"mm\:ss\.fff")</MudText>
                                            }
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </MudSimpleTable>
                        }
                    }
                </div>

                @if (this.OutputCalculation.Count > 0)
                {
                    <MudSimpleTable Elevation="0" Hover="true" Dense="true" FixedHeader="true">
                        <thead>
                        <tr>
                            <th><MudText Class="mud-typography-align-right" Typo="Typo.subtitle2">Distanz</MudText></th>
                            <th><MudText Class="mud-typography-align-left" Typo="Typo.subtitle2">Zeit</MudText></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in this.OutputCalculation)
                        {
                            <tr>
                                <td><MudText Class="mud-typography-align-right" Typo="Typo.body1">@($"{item.Item1} m:")</MudText></td>
                                <td><MudText Class="mud-typography-align-left" Typo="Typo.body1">@($"{(item.Item2.Hours > 0 ? $"{item.Item2.Hours}h:" : "")}{item.Item2.Minutes}m:{item.Item2.Seconds.ToString("D2")}s")</MudText></td>
                            </tr>
                        }
                        </tbody>
                    </MudSimpleTable>
                }
            </div>
        </div>
    </div>
</div>